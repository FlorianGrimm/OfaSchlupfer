namespace OfaSchlupfer.ScriptDom {
    internal class TriggerEventTypeHelper : OptionsHelper<EventNotificationEventType> {
        internal static readonly TriggerEventTypeHelper Instance = new TriggerEventTypeHelper();

        private TriggerEventTypeHelper() {
            base.AddOptionMapping(EventNotificationEventType.AddRoleMember, "ADD_ROLE_MEMBER", SqlVersionFlags.TSql90AndAbove);
            base.AddOptionMapping(EventNotificationEventType.AlterApplicationRole, "ALTER_APPLICATION_ROLE", SqlVersionFlags.TSql90AndAbove);
            base.AddOptionMapping(EventNotificationEventType.AlterAssembly, "ALTER_ASSEMBLY", SqlVersionFlags.TSql90AndAbove);
            base.AddOptionMapping(EventNotificationEventType.AlterAuthorizationDatabase, "ALTER_AUTHORIZATION_DATABASE", SqlVersionFlags.TSql90AndAbove);
            base.AddOptionMapping(EventNotificationEventType.AlterCertificate, "ALTER_CERTIFICATE", SqlVersionFlags.TSql90AndAbove);
            base.AddOptionMapping(EventNotificationEventType.AlterFunction, "ALTER_FUNCTION", SqlVersionFlags.TSql90AndAbove);
            base.AddOptionMapping(EventNotificationEventType.AlterIndex, "ALTER_INDEX", SqlVersionFlags.TSql90AndAbove);
            base.AddOptionMapping(EventNotificationEventType.AlterMessageType, "ALTER_MESSAGE_TYPE", SqlVersionFlags.TSql90AndAbove);
            base.AddOptionMapping(EventNotificationEventType.AlterPartitionFunction, "ALTER_PARTITION_FUNCTION", SqlVersionFlags.TSql90AndAbove);
            base.AddOptionMapping(EventNotificationEventType.AlterPartitionScheme, "ALTER_PARTITION_SCHEME", SqlVersionFlags.TSql90AndAbove);
            base.AddOptionMapping(EventNotificationEventType.AlterProcedure, "ALTER_PROCEDURE", SqlVersionFlags.TSql90AndAbove);
            base.AddOptionMapping(EventNotificationEventType.AlterQueue, "ALTER_QUEUE", SqlVersionFlags.TSql90AndAbove);
            base.AddOptionMapping(EventNotificationEventType.AlterRemoteServiceBinding, "ALTER_REMOTE_SERVICE_BINDING", SqlVersionFlags.TSql90AndAbove);
            base.AddOptionMapping(EventNotificationEventType.AlterRole, "ALTER_ROLE", SqlVersionFlags.TSql90AndAbove);
            base.AddOptionMapping(EventNotificationEventType.AlterRoute, "ALTER_ROUTE", SqlVersionFlags.TSql90AndAbove);
            base.AddOptionMapping(EventNotificationEventType.AlterSchema, "ALTER_SCHEMA", SqlVersionFlags.TSql90AndAbove);
            base.AddOptionMapping(EventNotificationEventType.AlterService, "ALTER_SERVICE", SqlVersionFlags.TSql90AndAbove);
            base.AddOptionMapping(EventNotificationEventType.AlterTable, "ALTER_TABLE", SqlVersionFlags.TSql90AndAbove);
            base.AddOptionMapping(EventNotificationEventType.AlterTrigger, "ALTER_TRIGGER", SqlVersionFlags.TSql90AndAbove);
            base.AddOptionMapping(EventNotificationEventType.AlterUser, "ALTER_USER", SqlVersionFlags.TSql90AndAbove);
            base.AddOptionMapping(EventNotificationEventType.AlterView, "ALTER_VIEW", SqlVersionFlags.TSql90AndAbove);
            base.AddOptionMapping(EventNotificationEventType.AlterXmlSchemaCollection, "ALTER_XML_SCHEMA_COLLECTION", SqlVersionFlags.TSql90AndAbove);
            base.AddOptionMapping(EventNotificationEventType.CreateApplicationRole, "CREATE_APPLICATION_ROLE", SqlVersionFlags.TSql90AndAbove);
            base.AddOptionMapping(EventNotificationEventType.CreateAssembly, "CREATE_ASSEMBLY", SqlVersionFlags.TSql90AndAbove);
            base.AddOptionMapping(EventNotificationEventType.CreateCertificate, "CREATE_CERTIFICATE", SqlVersionFlags.TSql90AndAbove);
            base.AddOptionMapping(EventNotificationEventType.CreateContract, "CREATE_CONTRACT", SqlVersionFlags.TSql90AndAbove);
            base.AddOptionMapping(EventNotificationEventType.CreateEventNotification, "CREATE_EVENT_NOTIFICATION", SqlVersionFlags.TSql90AndAbove);
            base.AddOptionMapping(EventNotificationEventType.CreateFunction, "CREATE_FUNCTION", SqlVersionFlags.TSql90AndAbove);
            base.AddOptionMapping(EventNotificationEventType.CreateIndex, "CREATE_INDEX", SqlVersionFlags.TSql90AndAbove);
            base.AddOptionMapping(EventNotificationEventType.CreateMessageType, "CREATE_MESSAGE_TYPE", SqlVersionFlags.TSql90AndAbove);
            base.AddOptionMapping(EventNotificationEventType.CreatePartitionFunction, "CREATE_PARTITION_FUNCTION", SqlVersionFlags.TSql90AndAbove);
            base.AddOptionMapping(EventNotificationEventType.CreatePartitionScheme, "CREATE_PARTITION_SCHEME", SqlVersionFlags.TSql90AndAbove);
            base.AddOptionMapping(EventNotificationEventType.CreateProcedure, "CREATE_PROCEDURE", SqlVersionFlags.TSql90AndAbove);
            base.AddOptionMapping(EventNotificationEventType.CreateQueue, "CREATE_QUEUE", SqlVersionFlags.TSql90AndAbove);
            base.AddOptionMapping(EventNotificationEventType.CreateRemoteServiceBinding, "CREATE_REMOTE_SERVICE_BINDING", SqlVersionFlags.TSql90AndAbove);
            base.AddOptionMapping(EventNotificationEventType.CreateRole, "CREATE_ROLE", SqlVersionFlags.TSql90AndAbove);
            base.AddOptionMapping(EventNotificationEventType.CreateRoute, "CREATE_ROUTE", SqlVersionFlags.TSql90AndAbove);
            base.AddOptionMapping(EventNotificationEventType.CreateSchema, "CREATE_SCHEMA", SqlVersionFlags.TSql90AndAbove);
            base.AddOptionMapping(EventNotificationEventType.CreateService, "CREATE_SERVICE", SqlVersionFlags.TSql90AndAbove);
            base.AddOptionMapping(EventNotificationEventType.CreateStatistics, "CREATE_STATISTICS", SqlVersionFlags.TSql90AndAbove);
            base.AddOptionMapping(EventNotificationEventType.CreateSynonym, "CREATE_SYNONYM", SqlVersionFlags.TSql90AndAbove);
            base.AddOptionMapping(EventNotificationEventType.CreateTable, "CREATE_TABLE", SqlVersionFlags.TSql90AndAbove);
            base.AddOptionMapping(EventNotificationEventType.CreateTrigger, "CREATE_TRIGGER", SqlVersionFlags.TSql90AndAbove);
            base.AddOptionMapping(EventNotificationEventType.CreateType, "CREATE_TYPE", SqlVersionFlags.TSql90AndAbove);
            base.AddOptionMapping(EventNotificationEventType.CreateUser, "CREATE_USER", SqlVersionFlags.TSql90AndAbove);
            base.AddOptionMapping(EventNotificationEventType.CreateView, "CREATE_VIEW", SqlVersionFlags.TSql90AndAbove);
            base.AddOptionMapping(EventNotificationEventType.CreateXmlIndex, "CREATE_XML_INDEX", SqlVersionFlags.TSql90AndAbove);
            base.AddOptionMapping(EventNotificationEventType.CreateXmlSchemaCollection, "CREATE_XML_SCHEMA_COLLECTION", SqlVersionFlags.TSql90AndAbove);
            base.AddOptionMapping(EventNotificationEventType.DenyDatabase, "DENY_DATABASE", SqlVersionFlags.TSql90AndAbove);
            base.AddOptionMapping(EventNotificationEventType.DropApplicationRole, "DROP_APPLICATION_ROLE", SqlVersionFlags.TSql90AndAbove);
            base.AddOptionMapping(EventNotificationEventType.DropAssembly, "DROP_ASSEMBLY", SqlVersionFlags.TSql90AndAbove);
            base.AddOptionMapping(EventNotificationEventType.DropCertificate, "DROP_CERTIFICATE", SqlVersionFlags.TSql90AndAbove);
            base.AddOptionMapping(EventNotificationEventType.DropContract, "DROP_CONTRACT", SqlVersionFlags.TSql90AndAbove);
            base.AddOptionMapping(EventNotificationEventType.DropEventNotification, "DROP_EVENT_NOTIFICATION", SqlVersionFlags.TSql90AndAbove);
            base.AddOptionMapping(EventNotificationEventType.DropFunction, "DROP_FUNCTION", SqlVersionFlags.TSql90AndAbove);
            base.AddOptionMapping(EventNotificationEventType.DropIndex, "DROP_INDEX", SqlVersionFlags.TSql90AndAbove);
            base.AddOptionMapping(EventNotificationEventType.DropMessageType, "DROP_MESSAGE_TYPE", SqlVersionFlags.TSql90AndAbove);
            base.AddOptionMapping(EventNotificationEventType.DropPartitionFunction, "DROP_PARTITION_FUNCTION", SqlVersionFlags.TSql90AndAbove);
            base.AddOptionMapping(EventNotificationEventType.DropPartitionScheme, "DROP_PARTITION_SCHEME", SqlVersionFlags.TSql90AndAbove);
            base.AddOptionMapping(EventNotificationEventType.DropProcedure, "DROP_PROCEDURE", SqlVersionFlags.TSql90AndAbove);
            base.AddOptionMapping(EventNotificationEventType.DropQueue, "DROP_QUEUE", SqlVersionFlags.TSql90AndAbove);
            base.AddOptionMapping(EventNotificationEventType.DropRemoteServiceBinding, "DROP_REMOTE_SERVICE_BINDING", SqlVersionFlags.TSql90AndAbove);
            base.AddOptionMapping(EventNotificationEventType.DropRole, "DROP_ROLE", SqlVersionFlags.TSql90AndAbove);
            base.AddOptionMapping(EventNotificationEventType.DropRoleMember, "DROP_ROLE_MEMBER", SqlVersionFlags.TSql90AndAbove);
            base.AddOptionMapping(EventNotificationEventType.DropRoute, "DROP_ROUTE", SqlVersionFlags.TSql90AndAbove);
            base.AddOptionMapping(EventNotificationEventType.DropSchema, "DROP_SCHEMA", SqlVersionFlags.TSql90AndAbove);
            base.AddOptionMapping(EventNotificationEventType.DropService, "DROP_SERVICE", SqlVersionFlags.TSql90AndAbove);
            base.AddOptionMapping(EventNotificationEventType.DropStatistics, "DROP_STATISTICS", SqlVersionFlags.TSql90AndAbove);
            base.AddOptionMapping(EventNotificationEventType.DropSynonym, "DROP_SYNONYM", SqlVersionFlags.TSql90AndAbove);
            base.AddOptionMapping(EventNotificationEventType.DropTable, "DROP_TABLE", SqlVersionFlags.TSql90AndAbove);
            base.AddOptionMapping(EventNotificationEventType.DropTrigger, "DROP_TRIGGER", SqlVersionFlags.TSql90AndAbove);
            base.AddOptionMapping(EventNotificationEventType.DropType, "DROP_TYPE", SqlVersionFlags.TSql90AndAbove);
            base.AddOptionMapping(EventNotificationEventType.DropUser, "DROP_USER", SqlVersionFlags.TSql90AndAbove);
            base.AddOptionMapping(EventNotificationEventType.DropView, "DROP_VIEW", SqlVersionFlags.TSql90AndAbove);
            base.AddOptionMapping(EventNotificationEventType.DropXmlSchemaCollection, "DROP_XML_SCHEMA_COLLECTION", SqlVersionFlags.TSql90AndAbove);
            base.AddOptionMapping(EventNotificationEventType.GrantDatabase, "GRANT_DATABASE", SqlVersionFlags.TSql90AndAbove);
            base.AddOptionMapping(EventNotificationEventType.RevokeDatabase, "REVOKE_DATABASE", SqlVersionFlags.TSql90AndAbove);
            base.AddOptionMapping(EventNotificationEventType.UpdateStatistics, "UPDATE_STATISTICS", SqlVersionFlags.TSql90AndAbove);
            base.AddOptionMapping(EventNotificationEventType.AddServerRoleMember, "ADD_SERVER_ROLE_MEMBER", SqlVersionFlags.TSql90AndAbove);
            base.AddOptionMapping(EventNotificationEventType.AlterAuthorizationServer, "ALTER_AUTHORIZATION_SERVER", SqlVersionFlags.TSql90AndAbove);
            base.AddOptionMapping(EventNotificationEventType.AlterDatabase, "ALTER_DATABASE", SqlVersionFlags.TSql90AndAbove);
            base.AddOptionMapping(EventNotificationEventType.AlterEndpoint, "ALTER_ENDPOINT", SqlVersionFlags.TSql90AndAbove);
            base.AddOptionMapping(EventNotificationEventType.AlterLogin, "ALTER_LOGIN", SqlVersionFlags.TSql90AndAbove);
            base.AddOptionMapping(EventNotificationEventType.CreateDatabase, "CREATE_DATABASE", SqlVersionFlags.TSql90AndAbove);
            base.AddOptionMapping(EventNotificationEventType.CreateEndpoint, "CREATE_ENDPOINT", SqlVersionFlags.TSql90AndAbove);
            base.AddOptionMapping(EventNotificationEventType.CreateLogin, "CREATE_LOGIN", SqlVersionFlags.TSql90AndAbove);
            base.AddOptionMapping(EventNotificationEventType.DenyServer, "DENY_SERVER", SqlVersionFlags.TSql90AndAbove);
            base.AddOptionMapping(EventNotificationEventType.DropDatabase, "DROP_DATABASE", SqlVersionFlags.TSql90AndAbove);
            base.AddOptionMapping(EventNotificationEventType.DropEndpoint, "DROP_ENDPOINT", SqlVersionFlags.TSql90AndAbove);
            base.AddOptionMapping(EventNotificationEventType.DropLogin, "DROP_LOGIN", SqlVersionFlags.TSql90AndAbove);
            base.AddOptionMapping(EventNotificationEventType.DropServerRoleMember, "DROP_SERVER_ROLE_MEMBER", SqlVersionFlags.TSql90AndAbove);
            base.AddOptionMapping(EventNotificationEventType.GrantServer, "GRANT_SERVER", SqlVersionFlags.TSql90AndAbove);
            base.AddOptionMapping(EventNotificationEventType.RevokeServer, "REVOKE_SERVER", SqlVersionFlags.TSql90AndAbove);
            base.AddOptionMapping(EventNotificationEventType.AddSignature, "ADD_SIGNATURE", SqlVersionFlags.TSql100AndAbove);
            base.AddOptionMapping(EventNotificationEventType.AddSignatureSchemaObject, "ADD_SIGNATURE_SCHEMA_OBJECT", SqlVersionFlags.TSql100AndAbove);
            base.AddOptionMapping(EventNotificationEventType.AlterAsymmetricKey, "ALTER_ASYMMETRIC_KEY", SqlVersionFlags.TSql100AndAbove);
            base.AddOptionMapping(EventNotificationEventType.AlterBrokerPriority, "ALTER_BROKER_PRIORITY", SqlVersionFlags.TSql100AndAbove);
            base.AddOptionMapping(EventNotificationEventType.AlterDatabaseAuditSpecification, "ALTER_DATABASE_AUDIT_SPECIFICATION", SqlVersionFlags.TSql100AndAbove);
            base.AddOptionMapping(EventNotificationEventType.AlterDatabaseEncryptionKey, "ALTER_DATABASE_ENCRYPTION_KEY", SqlVersionFlags.TSql100AndAbove);
            base.AddOptionMapping(EventNotificationEventType.AlterExtendedProperty, "ALTER_EXTENDED_PROPERTY", SqlVersionFlags.TSql100AndAbove);
            base.AddOptionMapping(EventNotificationEventType.AlterFullTextCatalog, "ALTER_FULLTEXT_CATALOG", SqlVersionFlags.TSql100AndAbove);
            base.AddOptionMapping(EventNotificationEventType.AlterFullTextIndex, "ALTER_FULLTEXT_INDEX", SqlVersionFlags.TSql100AndAbove);
            base.AddOptionMapping(EventNotificationEventType.AlterFullTextStopList, "ALTER_FULLTEXT_STOPLIST", SqlVersionFlags.TSql100AndAbove);
            base.AddOptionMapping(EventNotificationEventType.AlterMasterKey, "ALTER_MASTER_KEY", SqlVersionFlags.TSql100AndAbove);
            base.AddOptionMapping(EventNotificationEventType.AlterPlanGuide, "ALTER_PLAN_GUIDE", SqlVersionFlags.TSql100AndAbove);
            base.AddOptionMapping(EventNotificationEventType.AlterSymmetricKey, "ALTER_SYMMETRIC_KEY", SqlVersionFlags.TSql100AndAbove);
            base.AddOptionMapping(EventNotificationEventType.BindDefault, "BIND_DEFAULT", SqlVersionFlags.TSql100AndAbove);
            base.AddOptionMapping(EventNotificationEventType.BindRule, "BIND_RULE", SqlVersionFlags.TSql100AndAbove);
            base.AddOptionMapping(EventNotificationEventType.CreateAsymmetricKey, "CREATE_ASYMMETRIC_KEY", SqlVersionFlags.TSql100AndAbove);
            base.AddOptionMapping(EventNotificationEventType.CreateBrokerPriority, "CREATE_BROKER_PRIORITY", SqlVersionFlags.TSql100AndAbove);
            base.AddOptionMapping(EventNotificationEventType.CreateDatabaseAuditSpecification, "CREATE_DATABASE_AUDIT_SPECIFICATION", SqlVersionFlags.TSql100AndAbove);
            base.AddOptionMapping(EventNotificationEventType.CreateDatabaseEncryptionKey, "CREATE_DATABASE_ENCRYPTION_KEY", SqlVersionFlags.TSql100AndAbove);
            base.AddOptionMapping(EventNotificationEventType.CreateDefault, "CREATE_DEFAULT", SqlVersionFlags.TSql100AndAbove);
            base.AddOptionMapping(EventNotificationEventType.CreateExtendedProperty, "CREATE_EXTENDED_PROPERTY", SqlVersionFlags.TSql100AndAbove);
            base.AddOptionMapping(EventNotificationEventType.CreateFullTextCatalog, "CREATE_FULLTEXT_CATALOG", SqlVersionFlags.TSql100AndAbove);
            base.AddOptionMapping(EventNotificationEventType.CreateFullTextIndex, "CREATE_FULLTEXT_INDEX", SqlVersionFlags.TSql100AndAbove);
            base.AddOptionMapping(EventNotificationEventType.CreateFullTextStopList, "CREATE_FULLTEXT_STOPLIST", SqlVersionFlags.TSql100AndAbove);
            base.AddOptionMapping(EventNotificationEventType.CreateMasterKey, "CREATE_MASTER_KEY", SqlVersionFlags.TSql100AndAbove);
            base.AddOptionMapping(EventNotificationEventType.CreatePlanGuide, "CREATE_PLAN_GUIDE", SqlVersionFlags.TSql100AndAbove);
            base.AddOptionMapping(EventNotificationEventType.CreateRule, "CREATE_RULE", SqlVersionFlags.TSql100AndAbove);
            base.AddOptionMapping(EventNotificationEventType.CreateSpatialIndex, "CREATE_SPATIAL_INDEX", SqlVersionFlags.TSql100AndAbove);
            base.AddOptionMapping(EventNotificationEventType.CreateSymmetricKey, "CREATE_SYMMETRIC_KEY", SqlVersionFlags.TSql100AndAbove);
            base.AddOptionMapping(EventNotificationEventType.DropAsymmetricKey, "DROP_ASYMMETRIC_KEY", SqlVersionFlags.TSql100AndAbove);
            base.AddOptionMapping(EventNotificationEventType.DropBrokerPriority, "DROP_BROKER_PRIORITY", SqlVersionFlags.TSql100AndAbove);
            base.AddOptionMapping(EventNotificationEventType.DropDatabaseAuditSpecification, "DROP_DATABASE_AUDIT_SPECIFICATION", SqlVersionFlags.TSql100AndAbove);
            base.AddOptionMapping(EventNotificationEventType.DropDatabaseEncryptionKey, "DROP_DATABASE_ENCRYPTION_KEY", SqlVersionFlags.TSql100AndAbove);
            base.AddOptionMapping(EventNotificationEventType.DropDefault, "DROP_DEFAULT", SqlVersionFlags.TSql100AndAbove);
            base.AddOptionMapping(EventNotificationEventType.DropExtendedProperty, "DROP_EXTENDED_PROPERTY", SqlVersionFlags.TSql100AndAbove);
            base.AddOptionMapping(EventNotificationEventType.DropFullTextCatalog, "DROP_FULLTEXT_CATALOG", SqlVersionFlags.TSql100AndAbove);
            base.AddOptionMapping(EventNotificationEventType.DropFullTextIndex, "DROP_FULLTEXT_INDEX", SqlVersionFlags.TSql100AndAbove);
            base.AddOptionMapping(EventNotificationEventType.DropFullTextStopList, "DROP_FULLTEXT_STOPLIST", SqlVersionFlags.TSql100AndAbove);
            base.AddOptionMapping(EventNotificationEventType.DropMasterKey, "DROP_MASTER_KEY", SqlVersionFlags.TSql100AndAbove);
            base.AddOptionMapping(EventNotificationEventType.DropPlanGuide, "DROP_PLAN_GUIDE", SqlVersionFlags.TSql100AndAbove);
            base.AddOptionMapping(EventNotificationEventType.DropRule, "DROP_RULE", SqlVersionFlags.TSql100AndAbove);
            base.AddOptionMapping(EventNotificationEventType.DropSignature, "DROP_SIGNATURE", SqlVersionFlags.TSql100AndAbove);
            base.AddOptionMapping(EventNotificationEventType.DropSignatureSchemaObject, "DROP_SIGNATURE_SCHEMA_OBJECT", SqlVersionFlags.TSql100AndAbove);
            base.AddOptionMapping(EventNotificationEventType.DropSymmetricKey, "DROP_SYMMETRIC_KEY", SqlVersionFlags.TSql100AndAbove);
            base.AddOptionMapping(EventNotificationEventType.Rename, "RENAME", SqlVersionFlags.TSql100AndAbove);
            base.AddOptionMapping(EventNotificationEventType.UnbindDefault, "UNBIND_DEFAULT", SqlVersionFlags.TSql100AndAbove);
            base.AddOptionMapping(EventNotificationEventType.UnbindRule, "UNBIND_RULE", SqlVersionFlags.TSql100AndAbove);
            base.AddOptionMapping(EventNotificationEventType.AlterCredential, "ALTER_CREDENTIAL", SqlVersionFlags.TSql100AndAbove);
            base.AddOptionMapping(EventNotificationEventType.AlterCryptographicProvider, "ALTER_CRYPTOGRAPHIC_PROVIDER", SqlVersionFlags.TSql100AndAbove);
            base.AddOptionMapping(EventNotificationEventType.AlterEventSession, "ALTER_EVENT_SESSION", SqlVersionFlags.TSql100AndAbove);
            base.AddOptionMapping(EventNotificationEventType.AlterInstance, "ALTER_INSTANCE", SqlVersionFlags.TSql100AndAbove);
            base.AddOptionMapping(EventNotificationEventType.AlterLinkedServer, "ALTER_LINKED_SERVER", SqlVersionFlags.TSql100AndAbove);
            base.AddOptionMapping(EventNotificationEventType.AlterMessage, "ALTER_MESSAGE", SqlVersionFlags.TSql100AndAbove);
            base.AddOptionMapping(EventNotificationEventType.AlterRemoteServer, "ALTER_REMOTE_SERVER", SqlVersionFlags.TSql100AndAbove);
            base.AddOptionMapping(EventNotificationEventType.AlterResourceGovernorConfig, "ALTER_RESOURCE_GOVERNOR_CONFIG", SqlVersionFlags.TSql100AndAbove);
            base.AddOptionMapping(EventNotificationEventType.AlterResourcePool, "ALTER_RESOURCE_POOL", SqlVersionFlags.TSql100AndAbove);
            base.AddOptionMapping(EventNotificationEventType.AlterServerAudit, "ALTER_SERVER_AUDIT", SqlVersionFlags.TSql100AndAbove);
            base.AddOptionMapping(EventNotificationEventType.AlterServerAuditSpecification, "ALTER_SERVER_AUDIT_SPECIFICATION", SqlVersionFlags.TSql100AndAbove);
            base.AddOptionMapping(EventNotificationEventType.AlterServiceMasterKey, "ALTER_SERVICE_MASTER_KEY", SqlVersionFlags.TSql100AndAbove);
            base.AddOptionMapping(EventNotificationEventType.AlterWorkloadGroup, "ALTER_WORKLOAD_GROUP", SqlVersionFlags.TSql100AndAbove);
            base.AddOptionMapping(EventNotificationEventType.CreateCredential, "CREATE_CREDENTIAL", SqlVersionFlags.TSql100AndAbove);
            base.AddOptionMapping(EventNotificationEventType.CreateCryptographicProvider, "CREATE_CRYPTOGRAPHIC_PROVIDER", SqlVersionFlags.TSql100AndAbove);
            base.AddOptionMapping(EventNotificationEventType.CreateEventSession, "CREATE_EVENT_SESSION", SqlVersionFlags.TSql100AndAbove);
            base.AddOptionMapping(EventNotificationEventType.CreateExtendedProcedure, "CREATE_EXTENDED_PROCEDURE", SqlVersionFlags.TSql100AndAbove);
            base.AddOptionMapping(EventNotificationEventType.CreateLinkedServer, "CREATE_LINKED_SERVER", SqlVersionFlags.TSql100AndAbove);
            base.AddOptionMapping(EventNotificationEventType.CreateLinkedServerLogin, "CREATE_LINKED_SERVER_LOGIN", SqlVersionFlags.TSql100AndAbove);
            base.AddOptionMapping(EventNotificationEventType.CreateMessage, "CREATE_MESSAGE", SqlVersionFlags.TSql100AndAbove);
            base.AddOptionMapping(EventNotificationEventType.CreateRemoteServer, "CREATE_REMOTE_SERVER", SqlVersionFlags.TSql100AndAbove);
            base.AddOptionMapping(EventNotificationEventType.CreateResourcePool, "CREATE_RESOURCE_POOL", SqlVersionFlags.TSql100AndAbove);
            base.AddOptionMapping(EventNotificationEventType.CreateServerAudit, "CREATE_SERVER_AUDIT", SqlVersionFlags.TSql100AndAbove);
            base.AddOptionMapping(EventNotificationEventType.CreateServerAuditSpecification, "CREATE_SERVER_AUDIT_SPECIFICATION", SqlVersionFlags.TSql100AndAbove);
            base.AddOptionMapping(EventNotificationEventType.CreateWorkloadGroup, "CREATE_WORKLOAD_GROUP", SqlVersionFlags.TSql100AndAbove);
            base.AddOptionMapping(EventNotificationEventType.DropCredential, "DROP_CREDENTIAL", SqlVersionFlags.TSql100AndAbove);
            base.AddOptionMapping(EventNotificationEventType.DropCryptographicProvider, "DROP_CRYPTOGRAPHIC_PROVIDER", SqlVersionFlags.TSql100AndAbove);
            base.AddOptionMapping(EventNotificationEventType.DropEventSession, "DROP_EVENT_SESSION", SqlVersionFlags.TSql100AndAbove);
            base.AddOptionMapping(EventNotificationEventType.DropExtendedProcedure, "DROP_EXTENDED_PROCEDURE", SqlVersionFlags.TSql100AndAbove);
            base.AddOptionMapping(EventNotificationEventType.DropLinkedServer, "DROP_LINKED_SERVER", SqlVersionFlags.TSql100AndAbove);
            base.AddOptionMapping(EventNotificationEventType.DropLinkedServerLogin, "DROP_LINKED_SERVER_LOGIN", SqlVersionFlags.TSql100AndAbove);
            base.AddOptionMapping(EventNotificationEventType.DropMessage, "DROP_MESSAGE", SqlVersionFlags.TSql100AndAbove);
            base.AddOptionMapping(EventNotificationEventType.DropRemoteServer, "DROP_REMOTE_SERVER", SqlVersionFlags.TSql100AndAbove);
            base.AddOptionMapping(EventNotificationEventType.DropResourcePool, "DROP_RESOURCE_POOL", SqlVersionFlags.TSql100AndAbove);
            base.AddOptionMapping(EventNotificationEventType.DropServerAudit, "DROP_SERVER_AUDIT", SqlVersionFlags.TSql100AndAbove);
            base.AddOptionMapping(EventNotificationEventType.DropServerAuditSpecification, "DROP_SERVER_AUDIT_SPECIFICATION", SqlVersionFlags.TSql100AndAbove);
            base.AddOptionMapping(EventNotificationEventType.DropWorkloadGroup, "DROP_WORKLOAD_GROUP", SqlVersionFlags.TSql100AndAbove);
            base.AddOptionMapping(EventNotificationEventType.AlterServerConfiguration, "ALTER_SERVER_CONFIGURATION", SqlVersionFlags.TSql100AndAbove);
            base.AddOptionMapping(EventNotificationEventType.CreateSearchPropertyList, "CREATE_SEARCH_PROPERTY_LIST", SqlVersionFlags.TSql110AndAbove);
            base.AddOptionMapping(EventNotificationEventType.AlterSearchPropertyList, "ALTER_SEARCH_PROPERTY_LIST", SqlVersionFlags.TSql110AndAbove);
            base.AddOptionMapping(EventNotificationEventType.DropSearchPropertyList, "DROP_SEARCH_PROPERTY_LIST", SqlVersionFlags.TSql110AndAbove);
            base.AddOptionMapping(EventNotificationEventType.CreateServerRole, "CREATE_SERVER_ROLE", SqlVersionFlags.TSql110AndAbove);
            base.AddOptionMapping(EventNotificationEventType.AlterServerRole, "ALTER_SERVER_ROLE", SqlVersionFlags.TSql110AndAbove);
            base.AddOptionMapping(EventNotificationEventType.DropServerRole, "DROP_SERVER_ROLE", SqlVersionFlags.TSql110AndAbove);
            base.AddOptionMapping(EventNotificationEventType.CreateSequence, "CREATE_SEQUENCE", SqlVersionFlags.TSql110AndAbove);
            base.AddOptionMapping(EventNotificationEventType.AlterSequence, "ALTER_SEQUENCE", SqlVersionFlags.TSql110AndAbove);
            base.AddOptionMapping(EventNotificationEventType.DropSequence, "DROP_SEQUENCE", SqlVersionFlags.TSql110AndAbove);
            base.AddOptionMapping(EventNotificationEventType.CreateAvailabilityGroup, "CREATE_AVAILABILITY_GROUP", SqlVersionFlags.TSql110AndAbove);
            base.AddOptionMapping(EventNotificationEventType.AlterAvailabilityGroup, "ALTER_AVAILABILITY_GROUP", SqlVersionFlags.TSql110AndAbove);
            base.AddOptionMapping(EventNotificationEventType.DropAvailabilityGroup, "DROP_AVAILABILITY_GROUP", SqlVersionFlags.TSql110AndAbove);
            base.AddOptionMapping(EventNotificationEventType.CreateDatabaseAudit, "CREATE_AUDIT", SqlVersionFlags.TSql120AndAbove);
            base.AddOptionMapping(EventNotificationEventType.DropDatabaseAudit, "DROP_AUDIT", SqlVersionFlags.TSql120AndAbove);
            base.AddOptionMapping(EventNotificationEventType.AlterDatabaseAudit, "ALTER_AUDIT", SqlVersionFlags.TSql120AndAbove);
            base.AddOptionMapping(EventNotificationEventType.CreateSecurityPolicy, "CREATE_SECURITY_POLICY", SqlVersionFlags.TSql120AndAbove);
            base.AddOptionMapping(EventNotificationEventType.AlterSecurityPolicy, "ALTER_SECURITY_POLICY", SqlVersionFlags.TSql120AndAbove);
            base.AddOptionMapping(EventNotificationEventType.DropSecurityPolicy, "DROP_SECURITY_POLICY", SqlVersionFlags.TSql120AndAbove);
            base.AddOptionMapping(EventNotificationEventType.CreateColumnMasterKey, "CREATE_COLUMN_MASTER_KEY", SqlVersionFlags.TSql120AndAbove);
            base.AddOptionMapping(EventNotificationEventType.DropColumnMasterKey, "DROP_COLUMN_MASTER_KEY", SqlVersionFlags.TSql120AndAbove);
            base.AddOptionMapping(EventNotificationEventType.CreateColumnEncryptionKey, "CREATE_COLUMN_ENCRYPTION_KEY", SqlVersionFlags.TSql120AndAbove);
            base.AddOptionMapping(EventNotificationEventType.AlterColumnEncryptionKey, "ALTER_COLUMN_ENCRYPTION_KEY", SqlVersionFlags.TSql120AndAbove);
            base.AddOptionMapping(EventNotificationEventType.DropColumnEncryptionKey, "DROP_COLUMN_ENCRYPTION_KEY", SqlVersionFlags.TSql120AndAbove);
            base.AddOptionMapping(EventNotificationEventType.AlterDatabaseScopedConfiguration, "ALTER_DATABASE_SCOPED_CONFIGURATION", SqlVersionFlags.TSql120AndAbove);
            base.AddOptionMapping(EventNotificationEventType.CreateExternalResourcePool, "CREATE_EXTERNAL_RESOURCE_POOL", SqlVersionFlags.TSql130AndAbove);
            base.AddOptionMapping(EventNotificationEventType.AlterExternalResourcePool, "ALTER_EXTERNAL_RESOURCE_POOL", SqlVersionFlags.TSql130AndAbove);
            base.AddOptionMapping(EventNotificationEventType.DropExternalResourcePool, "DROP_EXTERNAL_RESOURCE_POOL", SqlVersionFlags.TSql130AndAbove);
        }
    }
}
